name: Build and Package Binaries

on:
  push:
    tags:
      - '*'  # Trigger on tag pushes, for versioning

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get the version from the latest tag
        id: get_version
        run: |
          VERSION=$(git describe --tags --abbrev=0)
          echo "VERSION=${VERSION}" >> $GITHUB_ENV
          echo "::set-output name=version::${VERSION}"

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Build executable for macOS
        if: runner.os == 'macOS'
        run: |
          VERSION=${{ steps.get_version.outputs.version }}
          pyinstaller --onefile setup.py --name=tvhplayer-${VERSION}-macos-intel-x86
          
      - name: Build executable for Linux
        if: runner.os == 'Linux'
        run: |
          VERSION=${{ steps.get_version.outputs.version }}
          pyinstaller --onefile setup.py --name=tvhplayer-${VERSION}-linux

      - name: Build executable for Windows
        if: runner.os == 'Windows'
        run: |
          VERSION=${{ steps.get_version.outputs.version }}
          pyinstaller --onefile setup.py --name=tvhplayer-${VERSION}-windows.exe

      - name: Upload artifact for macOS
        if: runner.os == 'macOS'
        uses: actions/upload-artifact@v3
        with:
          name: tvhplayer-${{ steps.get_version.outputs.version }}-macos
          path: dist/tvhplayer-${{ steps.get_version.outputs.version }}-macos-intel-x86

      - name: Upload artifact for Linux
        if: runner.os == 'Linux'
        uses: actions/upload-artifact@v3
        with:
          name: tvhplayer-${{ steps.get_version.outputs.version }}-linux
          path: dist/tvhplayer-${{ steps.get_version.outputs.version }}-linux

      - name: Upload artifact for Windows
        if: runner.os == 'Windows'
        uses: actions/upload-artifact@v3
        with:
          name: tvhplayer-${{ steps.get_version.outputs.version }}-windows
          path: dist/tvhplayer-${{ steps.get_version.outputs.version }}-windows.exe

      - name: Upload to GitHub Releases
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: "Release ${{ github.ref_name }} (${VERSION})"
          body: "Auto-generated release for version ${{ github.ref_name }} (${VERSION})"
          files: dist/tvhplayer-${{ steps.get_version.outputs.version }}*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
