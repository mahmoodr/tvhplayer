name: Build and Package Binaries

on:
  push:
    tags:
      - '*'  # Trigger on tag pushes, for versioning

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get the version from the latest tag
        id: get_version
        run: |
          VERSION=$(git describe --tags --abbrev=0)
          echo "VERSION=${VERSION}" >> $GITHUB_ENV
          echo "::set-output name=version::${VERSION}"

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Build executable
        run: |
          # Use the version from the previous step
          VERSION=${{ steps.get_version.outputs.version }}
          echo "Building version: $VERSION"
          
          # Build the executable for each OS
          if [[ "$RUNNER_OS" == "macOS" ]]; then
            pyinstaller --onefile setup.py --name=tvhplayer-${VERSION}-macos-intel-x86
          elif [[ "$RUNNER_OS" == "Linux" ]]; then
            pyinstaller --onefile setup.py --name=tvhplayer-${VERSION}-linux
          else
            pyinstaller --onefile setup.py --name=tvhplayer-${VERSION}-windows.exe
          fi
        shell: bash

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: tvhplayer-${{ steps.get_version.outputs.version }}
          path: dist/tvhplayer-${{ steps.get_version.outputs.version }}*

      - name: Upload to GitHub Releases
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: "Release ${{ github.ref_name }} (${{ steps.get_version.outputs.version }})"
          body: "Auto-generated release for version ${{ github.ref_name }} (${VERSION})"
          files: dist/tvhplayer-${{ steps.get_version.outputs.version }}*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}